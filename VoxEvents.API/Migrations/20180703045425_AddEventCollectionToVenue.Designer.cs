// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using VoxEvents.API.Entities;

namespace VoxEvents.API.Migrations
{
    [DbContext(typeof(VoxEventsContext))]
    [Migration("20180703045425_AddEventCollectionToVenue")]
    partial class AddEventCollectionToVenue
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VoxEvents.API.Entities.Availability", b =>
                {
                    b.Property<int>("MemberId");

                    b.Property<int>("VoxEventId");

                    b.Property<bool>("Available");

                    b.HasKey("MemberId", "VoxEventId");

                    b.HasIndex("VoxEventId");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("VoxEvents.API.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Part");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("VoxEvents.API.Entities.Venue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("ContactEmail");

                    b.Property<string>("ContactPerson");

                    b.Property<string>("ContactPhone");

                    b.Property<bool>("HasPiano");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("VoxEvents.API.Entities.VoxEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EventDate");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("PerformanceTime");

                    b.Property<DateTime>("RehearsalTime");

                    b.Property<int>("VenueId");

                    b.HasKey("Id");

                    b.HasIndex("VenueId");

                    b.ToTable("VoxEvents");
                });

            modelBuilder.Entity("VoxEvents.API.Entities.Availability", b =>
                {
                    b.HasOne("VoxEvents.API.Entities.Member", "Member")
                        .WithMany("Availabilities")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VoxEvents.API.Entities.VoxEvent", "VoxEvent")
                        .WithMany("Availabilities")
                        .HasForeignKey("VoxEventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VoxEvents.API.Entities.VoxEvent", b =>
                {
                    b.HasOne("VoxEvents.API.Entities.Venue", "Venue")
                        .WithMany("VoxEvents")
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
